###########
# ðŸ“œ Poetry
###########
[tool.poetry]
name = "audio-cleaner"
version = "0.1.0"
description = "FSDL 2022 project."
authors = ["John Sandall <2884159+john-sandall@users.noreply.github.com>"]
license = "MIT"
classifiers = ["Private :: Do Not Upload"]
# packages = [{ include = "audio_cleaner", from = "audio_cleaner" }]

[tool.poetry.dependencies]
python = ">=3.10.4,<3.11"
# Everything below here is alphabetically sorted
coverage = { version = "^6.4.4", extras = ["toml"] } # 6.4
gantry = "^0.4.10" # ==0.4.5 versioned for stability
gradio = "^3.3" # 3.0.21
h5py = "^3.7.0"
importlib-metadata = "^4.12.0" # >=4.4
Jinja2 = "^3.1.2" # >=2.11,<2.12  # versioned to match Google Colab up to minor
loguru = "^0.6.0"
markupsafe = "^2.1.1" # <2.1  # versioned to avoid breaking change in minor version update
numpy = "^1.23.3"
pandas = "^1.5.0"
pillow = "^9.2.0" # <7.2
pyngrok = "^5.1.0"
requests = "^2.28.1"
seaborn = "^0.12.0"
smart-open = { version = "^6.1.0", extras = ["s3"] }
torch = [ # https://download.pytorch.org/whl/torch/
	# wget https://download.pytorch.org/whl/cu116/torch-1.12.1%2Bcu116-cp310-cp310-linux_x86_64.whl -P ./wheels/
	{ path = "./wheels/torch-1.12.1+cu116-cp310-cp310-linux_x86_64.whl", markers = "sys_platform == 'linux'" },
	{ version = "^1.12.1", markers = "sys_platform == 'darwin'" },
]
torchvision = [ # https://download.pytorch.org/whl/torchvision/
	# wget https://download.pytorch.org/whl/cu116/torchvision-0.13.1%2Bcu116-cp310-cp310-linux_x86_64.whl -P ./wheels/
	{ path = "./wheels/torchvision-0.13.1+cu116-cp310-cp310-linux_x86_64.whl", markers = "sys_platform == 'linux'" },
	{ version = "^0.13.1", markers = "sys_platform == 'darwin'" },
]
tqdm = "^4.64.1"

[tool.poetry.dev-dependencies]
# Everything below here is alphabetically sorted
bandit = "^1.7.4"
black = "^22.8.0"
boltons = "^21.0.0"
darglint = "^1.8.1"
defusedxml = "^0.7.1"
detect-secrets = "^1.3.0"
flake8 = "^5.0.4"                     # "<4"
flake8-annotations = "^2.9.1"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.3"
flake8-bugbear = "^22.8.23"
flake8-docstrings = "^1.6.0"
flake8-eradicate = "^1.3.0"
flake8-fixme = "^1.1.1"
flake8-implicit-str-concat = "^0.3.0"
flake8-import-order = "^0.18.1"
flake8-no-pep420 = "^2.3.0"
# flake8-print = "^5.0.0"
flake8-return = "^1.1.3"
ipdb = "^0.13.9"
ipykernel = "^6.15.2"
ipywidgets = "^8.0.2"
isort = "^5.10.1"
itermplot = "^0.331"
jupyterlab = "^3.4.6"
jupyter-black = "^0.3.1"
matplotlib = "^3.5.3"
mypy = "^0.971"              # mypy==0.960  # mypy version also pinned in .pre-commit-config.yaml
nltk = "^3.7"
notebook = "^6.4.12"
pip-audit = "^2.4.4"
poetryup = "^0.8.2"
pre-commit = "^2.20.0"
pycodestyle = "^2.9.1"
pydocstyle = "^6.1.1"
pylint = "^2.15.2"
pytest = "^7.1.3"            # pytest==7.1.1
pytest-cov = "^3.0.0"        #==3.0.0
pytorch-lightning = "^1.7.5" # 1.6.3  # versioned to improve stability
safety = "^2.1.1"
scipy = "^1.9.1"             # "<1.9"
shellcheck-py = "^0.8.0.4"
toml = "^0.10.2"
torchmetrics = "^0.9.3"      # <0.8
tornado = "^6.2"             # ">=5.1,<5.2"  # versioned to match Google Colab
towncrier = "^21.9.0"
types-toml = "^0.10.8"
wandb = "^0.12.21"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

############
# âœ… Linters
############
[tool.black]
line-length = 120
target-version = ["py310"]

[tool.darglint] # configured in setup.cfg

[tool.isort]
profile = "black"
line_length = 100
default_section = "THIRDPARTY"
known_first_party = ["app_gradio", "text_recognizer", "tests", "training"]
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
add_imports = "from __future__ import annotations"

[tool.mypy]
ignore_missing_imports = true
exclude = ["training/logs"]

[tool.pylint.MASTER]
ignore-paths = [".git"]
load-plugins = []

[tool.pylint."MESSAGES CONTROL"]
enable = "all"
max-module-lines = 2000
max-line-length = 120
max-locals = 50
min-similarity-lines = 150
max-statements = 89
max-args = 22
max-branches = 17
good-names = [
	"_B",
	"_C",
	"_Ch",
	"_H",
	"_W",
	"B",
	"c",
	"C",
	"f",
	"fc",
	"fn",
	"H",
	"i",
	"id",
	"ii",
	"ks",
	"lr",
	"m",
	"mx",
	"n",
	"N",
	"pe",
	"r",
	"s",
	"S",
	"Sy",
	"t",
	"W",
	"WS",
	"WW",
	"x",
	"X",
	"xs",
	"xt",
	"y",
	"Y",
	"yt",
	"zf",
]
disable = [
	"locally-disabled",
	"missing-class-docstring",
	"missing-function-docstring",
	"missing-module-docstring",
	"suppressed-message",
	"too-few-public-methods",
	"too-many-ancestors",
	"too-many-instance-attributes",
	# Disabled due to pylint bugs
	"import-self", # https://github.com/PyCQA/pylint/issues/3933
	# TODO: Investigate whether these should be disabled
	"E1101",
	"R1732",
	"W0201",
	"W0212",
	"W0221",
	"W0237",
	"W0613",
	"W0621",
	"W0622",
]
logging-format-style = "new"

[tool.pytest.ini_options]
markers = [
	"slow: marks a test as slow (deselect with '-m \"not slow\"']",
	"data: marks a test as dependent on a data download (deselect with '-m \"not data\"')",
]
addopts = "--cov training --cov text_recognizer --cov-branch --doctest-modules --ignore training/logs -m 'not data' --ignore-glob **/bootstrap.py"

##############
# ðŸ“£ Towncrier
##############
[tool.towncrier]
package = "audio_cleaner"
package_dir = "."
filename = "CHANGELOG.md"
directory = ".changelog/"
template = ".changelog/template.md"
title_format = "## [{version}] - {project_date}"
issue_format = "[#{issue}](https://github.com/john-sandall/audio-cleaner/issues/{issue})"
start_string = "<!-- TOWNCRIER -->\n"
underlines = ["", ""]

# .added for new features
# .changed for changes in existing functionality
# .deprecated for soon-to-be removed features
# .removed for now removed features
# .fixed for any bug fixes
# .security in case of vulnerabilities
# .analysis for data analyses
# .docs for documentation improvements
# .maintenance for maintenance tasks & upgrades
[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Bug Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "analysis"
name = "Analyses"
showcontent = true

[[tool.towncrier.type]]
directory = "docs"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "maintenance"
name = "Maintenance Changes"
showcontent = true
